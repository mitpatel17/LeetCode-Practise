/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode p1 = null;
        ListNode head = null;
        int carry = 0;
        
        while (l1 != null || l2 != null || carry > 0){
            
            int v1 = 0;
            int v2 = 0;
            
            if (l1 != null){
                v1 = l1.val;
                l1 = l1.next;
            }
            if (l2 != null){
                v2 = l2.val;
                l2 = l2.next;
            }
            
            int sum = v1 + v2 + carry;
            int curr = sum % 10;
            carry = sum / 10;
            
            if (p1 != null){
                p1.next = new ListNode(curr);
                p1 = p1.next;
            }
            else{
                p1 = new ListNode(curr);
                head = p1;
            }
        
        }
            
        return head;
        
        
    }
}