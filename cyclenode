/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        
        if (head == null){
            return head;
        }
        
        ListNode slow = head;
        ListNode fast = head;
        ListNode inter = null;
        
        while (fast != null && fast.next != null){
            
            slow = slow.next;
            fast = fast.next.next;
            
            if (slow == fast){
                inter = fast;
                break;
            }
            
        }
        
        if (inter == null){
            return inter;
        }
        
        slow = head;
            
        while (slow != fast){
            
            slow = slow.next;
            fast = fast.next;
            
        }
        
        return slow;
        
    }
}